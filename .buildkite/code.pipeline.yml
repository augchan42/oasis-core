##
# Code pipeline
##
#
# Main Buildkite pipeline for running code-related linters and tests.
#

docker_plugin_default_config: &docker_plugin_default_config
  image: "oasisprotocol/oasis-core-ci:master"
  always_pull: true
  workdir: /workdir
  volumes:
    - /var/lib/buildkite-agent/.coveralls:/root/.coveralls
    - /var/lib/buildkite-agent/.codecov:/root/.codecov
    # IAS Development API keys.
    - /var/lib/buildkite-agent/.oasis-ias:/root/.oasis-ias
    # Shared Rust incremental compile caches.
    - /var/tmp/cargo_ic/debug:/var/tmp/artifacts/default/debug/incremental
    - /var/tmp/cargo_ic/debug_sgx:/var/tmp/artifacts/sgx/x86_64-unknown-linux-sgx/debug/incremental
    # Shared Rust package checkouts directory.
    - /var/tmp/cargo_pkg/git:/root/.cargo/git
    - /var/tmp/cargo_pkg/registry:/root/.cargo/registry
    # Shared Rust SGX standard library artifacts cache.
    - /var/tmp/xargo_cache:/root/.xargo
    # Shared Go package checkouts directory.
    - /var/tmp/go_pkg:/root/go/pkg
    # Intel SGX Application Enclave Services Manager (AESM) daemon running on
    # the Buildkite host.
    - /var/run/aesmd/aesm.socket:/var/run/aesmd/aesm.socket
    # Propapage the tmpfs mount.
    - /tmp:/tmp
    # NOTE: When changing the environment variables below, also copy the changes
  # to the docker_plugin_sgx_config.
  environment:
    - "LC_ALL=C.UTF-8"
    - "LANG=C.UTF-8"
    - "CARGO_TARGET_DIR=/var/tmp/artifacts"
    - "CARGO_INSTALL_ROOT=/root/.cargo"
    - "GOPROXY=https://proxy.golang.org/"
    - "GO111MODULE=auto"
  propagate-environment: true
  unconfined: true

docker_plugin_sgx_config: &docker_plugin_sgx_config
  <<: *docker_plugin_default_config
  devices:
    # Intel SGX device.
    - /dev/isgx
  environment:
    - "OASIS_TEE_HARDWARE=intel-sgx"
    # Copy of environment variables defined in docker_plugin_default_config.
    - "LC_ALL=C.UTF-8"
    - "LANG=C.UTF-8"
    - "CARGO_TARGET_DIR=/var/tmp/artifacts"
    - "CARGO_INSTALL_ROOT=/root/.cargo"
    - "GOPROXY=https://proxy.golang.org/"

docker_plugin: &docker_plugin
  oasislabs/docker#v3.0.1-oasis1:
    <<: *docker_plugin_default_config

docker_plugin_sgx: &docker_plugin_sgx
  oasislabs/docker#v3.0.1-oasis1:
    <<: *docker_plugin_sgx_config

retry: &retry_agent_failure
  automatic:
    - exit_status: 125 # ERRO[0092] error waiting for container: unexpected EOF
      limit: 2

steps:
  ###################################################
  # Test that build-fuzz still works (only on master)
  ###################################################
  - label: Test fuzz builds
    command:
      # TODO: Consider making this a part of the development Docker image.
      - go install github.com/dvyukov/go-fuzz/go-fuzz@latest github.com/dvyukov/go-fuzz/go-fuzz-build@latest
      - make -C go build-fuzz
    retry:
      <<: *retry_agent_failure
    plugins:
      <<: *docker_plugin
